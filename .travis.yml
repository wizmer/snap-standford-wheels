env:
  global:
    - REPO_DIR=snap-python
    # Commit from your-project that you want to build
    - BUILD_COMMIT=HEAD
    # pip dependencies to _build_ your project
    - BUILD_DEPENDS="numpy"
    # pip dependencies to _test_ your project.  Include any dependencies
    # that you need, that are also specified in BUILD_DEPENDS, this will be
    # a separate install.
    - TEST_DEPENDS="numpy nose"
    - PLAT=x86_64
    - UNICODE_WIDTH=32
    # - secure: "tRPEFFcQVv4RzaWgF5/6Mg7TAHlYaHcxg6v5UonHn1JxarhH5VQzvPRLA50SAQKug20XTah15Ae9ki15wu1HIM1x+AVVRiexF7WSmXlQqJBNytLMlzWYEcm86iDcjlHFHn82EWIpZhPDDXR+jRYf2ydpz2KgsiJQJ9mSCwg1no2YMP1Nm1q2SQTOvEm5KN+RVcc2jz9oYKB76GQTvjvqVmnxUqG6c1C9sbfXUlT3y9AUkg5DNxaBRfF8wUROtXkba+nIU5s4GmcKeCq5/JiJVUsyD1X5w9yXz6STwc0huu8EGprKuulcaB8r5+vR/rE0Z76bFOnoTGBiOdGZFx+G6YVsOcZnfXsr7NzHxHg81T0OvPCFV7wkk2FgE4hzvFp13VE9u6Q/xOlIEgC9iDe9EZaKelLgr8VmbJQDjk75hxaNyxDu1K4dWyTydvDzwmPg8GuaJ2d0qajtxDg8OagwGIutIqGXnrTGCHuf0BdBqJFbXGGtzezQqF610kUB4ozcN95HZiD6vHi7JCUzJvhYUn/o4ZfK2a9fVXD310eMQU1epZGDV0TxoKGQeA62RsFca++fgTfqRobyeATFxgjQIIC3WsNYPWSkj92ffE2sUc8xmmE69wbVHK2eDZrIs71hKJME1KYgshf8A4CSjiQG/psJA7EHJlCinyBa0q/Ks+o="



# You will likely prefer "language: generic" for travis configuration,
# rather than, say "language: python". Multibuild doesn't use
# Travis-provided Python but rather installs and uses its own, where the
# Python version is set from the MB_PYTHON_VERSION variable. You can still
# specify a language here if you need it for some unrelated logic and you
# can't use Multibuild-provided Python or other software present on a
# builder.
language: generic

# Required in Linux to invoke `docker` ourselves
services: docker

# Host distribution.  This is the distribution from which we run the build
# and test containers, via docker.
dist: xenial

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/Library/Caches/Homebrew
jobs:
  include:
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    #     - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.6
    #     - PLAT=i686
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.7
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.7
    #     - PLAT=i686
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.8
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.8
    #     - PLAT=i686

    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=3.6
    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=3.7
    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=3.8

before_install:
    - echo ${SNAPROOT}
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - clean_code $REPO_DIR $BUILD_COMMIT
    - before_install

install:
    # Maybe get and clean and patch source
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

# after_success:
#     # Copy compiled wheels to dist/ where Travis `dpl` tool can find them and upload to PyPI
#     - mkdir -p dist; cp ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl dist
#     - pip install twine
#     - twine upload --verbose -u bbp.opensource -p ${PYPI_PASSWORD} dist/*
